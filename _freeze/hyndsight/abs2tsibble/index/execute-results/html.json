{
  "hash": "142e9f0ddb8473ead58943418e09d596",
  "result": {
    "markdown": "---\ndate: 2020-01-24\ntitle: \"ABS time series as tsibbles\"\nslug: abs2tsibble\ncategories:\n  - time series\n  - statistics\n  - R\n  - tidyverts\n---\n\n\n\n::: {.cell hash='index_cache/html/loadpackages_50396733e63fad988d6b951ed06e4308'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tsibble)\nlibrary(readabs)\n```\n:::\n\n\nAustralian data analysts will know how frustrating it is to work with time series data from the Australian Bureau of Statistics. They are stored as multiple ugly Excel files (each containing multiple sheets) with inconsistent formatting, embedded comments, meta data stored along with the actual data, dates stored in a painful Excel format, and so on.\n\nFortunately there is an R package available to make this a little easier.\nThe [`readabs`](https://cran.r-project.org/package=readabs) package is maintained by [Matt Cowgill](https://twitter.com/mattcowgill) from the Grattan Institute --- which means it has probably had a very thorough workout!\n\nTo illustrate it, I will recreate the `tsibbledata::aus_retail` data, containing monthly Australian retail trade turnover for different combinations of industry and state. Here is the data as provided in the `tsibbledata package`.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_4ed83b404510a850bc89e20242565637'}\n\n```{.r .cell-code}\ntsibbledata::aus_retail\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 64,532 x 5 [1M]\n# Key:       State, Industry [152]\n   State                        Industry           Serie…¹    Month Turno…²\n   <chr>                        <chr>              <chr>      <mth>   <dbl>\n 1 Australian Capital Territory Cafes, restaurant… A33498… 1982 Apr     4.4\n 2 Australian Capital Territory Cafes, restaurant… A33498… 1982 May     3.4\n 3 Australian Capital Territory Cafes, restaurant… A33498… 1982 Jun     3.6\n 4 Australian Capital Territory Cafes, restaurant… A33498… 1982 Jul     4  \n 5 Australian Capital Territory Cafes, restaurant… A33498… 1982 Aug     3.6\n 6 Australian Capital Territory Cafes, restaurant… A33498… 1982 Sep     4.2\n 7 Australian Capital Territory Cafes, restaurant… A33498… 1982 Oct     4.8\n 8 Australian Capital Territory Cafes, restaurant… A33498… 1982 Nov     5.4\n 9 Australian Capital Territory Cafes, restaurant… A33498… 1982 Dec     6.9\n10 Australian Capital Territory Cafes, restaurant… A33498… 1983 Jan     3.8\n# … with 64,522 more rows, and abbreviated variable names ¹​`Series ID`,\n#   ²​Turnover\n```\n:::\n:::\n\n\n\n\nThere are 152 combinations of State and Industry (each corresponding to a `Series ID`).\n\nThe main function is `read_abs()` which will download the data, read it into R, and tidy it. While it will do this for all spreadsheets in a given catalogue number, I would not recommend that. Choose the spreadsheet you want. In this case, it is [Cat 8501.0](https://www.abs.gov.au/ausstats/abs@.nsf/mf/8501.0), Table 11.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_8886c6d92003cc074fbd285eadf9e754'}\n\n```{.r .cell-code}\nretail1 <- read_abs(\"8501.0\", tables = 11)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nFinding URLs for tables corresponding to ABS catalogue 8501.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nAttempting to download files from catalogue 8501.0, Retail Trade, Australia\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nDownloading https://www.abs.gov.au/statistics/industry/retail-and-wholesale-trade/retail-trade-australia/latest-release/8501011.xlsx\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nExtracting data from downloaded spreadsheets\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nTidying data from imported ABS spreadsheets\n```\n:::\n\n```{.r .cell-code}\nretail1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 91,476 × 12\n   table_no sheet…¹ table…² date       series value serie…³ data_…⁴ colle…⁵\n   <chr>    <chr>   <chr>   <date>     <chr>  <dbl> <chr>   <chr>   <chr>  \n 1 8501011  Data1   TABLE … 1982-04-01 Turno… 303.  Origin… FLOW    1      \n 2 8501011  Data1   TABLE … 1982-04-01 Turno…  41.7 Origin… FLOW    1      \n 3 8501011  Data1   TABLE … 1982-04-01 Turno…  63.9 Origin… FLOW    1      \n 4 8501011  Data1   TABLE … 1982-04-01 Turno… 409.  Origin… FLOW    1      \n 5 8501011  Data1   TABLE … 1982-04-01 Turno…  65.8 Origin… FLOW    1      \n 6 8501011  Data1   TABLE … 1982-04-01 Turno…  91.8 Origin… FLOW    1      \n 7 8501011  Data1   TABLE … 1982-04-01 Turno…  53.6 Origin… FLOW    1      \n 8 8501011  Data1   TABLE … 1982-04-01 Turno… 211.  Origin… FLOW    1      \n 9 8501011  Data1   TABLE … 1982-04-01 Turno…  94   Origin… FLOW    1      \n10 8501011  Data1   TABLE … 1982-04-01 Turno…  32.7 Origin… FLOW    1      \n# … with 91,466 more rows, 3 more variables: frequency <chr>,\n#   series_id <chr>, unit <chr>, and abbreviated variable names ¹​sheet_no,\n#   ²​table_title, ³​series_type, ⁴​data_type, ⁵​collection_month\n```\n:::\n:::\n\n\nSome of those columns are not particularly useful (containing a single unique value), so we will remove them. We also need to fix the date to be a Month (rather than Day), and we will match the names to `tsibbledata::aus_retail` to make comparisons easier.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_0c0af7c8a929ca862c804f41818f2580'}\n\n```{.r .cell-code}\nretail1 <- retail1 %>%\n  mutate(Month = yearmonth(date)) %>%\n  rename(Turnover = value, `Series ID` = series_id) %>%\n  select(Month, `Series ID`, series, Turnover)\nretail1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 91,476 × 4\n      Month `Series ID` series                                      Turno…¹\n      <mth> <chr>       <chr>                                         <dbl>\n 1 1982 Apr A3349335T   Turnover ;  New South Wales ;  Supermarket…   303. \n 2 1982 Apr A3349627V   Turnover ;  New South Wales ;  Liquor reta…    41.7\n 3 1982 Apr A3349338X   Turnover ;  New South Wales ;  Other speci…    63.9\n 4 1982 Apr A3349398A   Turnover ;  New South Wales ;  Food retail…   409. \n 5 1982 Apr A3349468W   Turnover ;  New South Wales ;  Furniture, …    65.8\n 6 1982 Apr A3349336V   Turnover ;  New South Wales ;  Electrical …    91.8\n 7 1982 Apr A3349337W   Turnover ;  New South Wales ;  Hardware, b…    53.6\n 8 1982 Apr A3349397X   Turnover ;  New South Wales ;  Household g…   211. \n 9 1982 Apr A3349399C   Turnover ;  New South Wales ;  Clothing re…    94  \n10 1982 Apr A3349874C   Turnover ;  New South Wales ;  Footwear an…    32.7\n# … with 91,466 more rows, and abbreviated variable name ¹​Turnover\n```\n:::\n:::\n\n\nThe `series` column contains information about the state and industry, so we will need to extract the relevant details. Also, totals are included in addition to the disaggregated data, so let's remove them.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_4cc36451b8841964fa46f418f1355b49'}\n\n```{.r .cell-code}\nretail1 <- retail1 %>%\n  separate(series, c(\"Category\", \"State\", \"Industry\"),\n           sep = \";\", extra = \"drop\") %>%\n  mutate(\n    State = trimws(State),\n    Industry = trimws(Industry),\n  ) %>%\n  select(-Category) %>%\n  filter(\n    Industry  != \"Total (Industry)\",\n    State != \"Total (State)\"\n  )\n```\n:::\n\n\nNext, we turn it into a tsibble by identifying the index and key variables, and removing any missing combinations.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-6_80eb1d5d25ae90c1bd53155445635fce'}\n\n```{.r .cell-code}\nretail1 <- retail1 %>%\n  as_tsibble(index = Month, key = c(State, Industry)) %>%\n  filter(!is.na(Turnover))\nretail1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 70,878 x 5 [1M]\n# Key:       State, Industry [156]\n      Month `Series ID` State                        Industry       Turno…¹\n      <mth> <chr>       <chr>                        <chr>            <dbl>\n 1 1982 Apr A3349849A   Australian Capital Territory Cafes, restau…     4.4\n 2 1982 May A3349849A   Australian Capital Territory Cafes, restau…     3.4\n 3 1982 Jun A3349849A   Australian Capital Territory Cafes, restau…     3.6\n 4 1982 Jul A3349849A   Australian Capital Territory Cafes, restau…     4  \n 5 1982 Aug A3349849A   Australian Capital Territory Cafes, restau…     3.6\n 6 1982 Sep A3349849A   Australian Capital Territory Cafes, restau…     4.2\n 7 1982 Oct A3349849A   Australian Capital Territory Cafes, restau…     4.8\n 8 1982 Nov A3349849A   Australian Capital Territory Cafes, restau…     5.4\n 9 1982 Dec A3349849A   Australian Capital Territory Cafes, restau…     6.9\n10 1983 Jan A3349849A   Australian Capital Territory Cafes, restau…     3.8\n# … with 70,868 more rows, and abbreviated variable name ¹​Turnover\n```\n:::\n:::\n\n\nThe additional rows here compared to `tsibbledata::aus_retail` are because the data now extend to November 2019.\n\nThere's a [helpful vignette](https://cran.r-project.org/web/packages/readabs/vignettes/readabs_vignette.html) demonstrating other facilities and features of the `readabs` package.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}