{
  "hash": "a03221b9e8603cdfb12027b987a4708f",
  "result": {
    "markdown": "---\ndate: 2014-02-08 04:08:38+00:00\nlink: https://robjhyndman.com/hyndsight/detecting-seasonality/\nslug: detecting-seasonality\ntitle: Detecting seasonality\ncategories:\n- forecasting\n- R\n- statistics\n---\n\n\nI occasionally get email asking how to detect whether seasonality is present in a data set. Sometimes the period of the potential seasonality is known, but in other cases it is not.\n\nI've [discussed before](https://robjhyndman.com/hyndsight/tscharacteristics/) how to estimate an unknown seasonal period, and how to measure the strength of the seasonality. In this post, I want to look at testing if a series is seasonal when the potential period is known (e.g., with quarterly, monthly, daily or hourly data).<!-- more -->\n\nOne simple approach is to fit a model with allows for seasonality if it is present. For example, you can fit an ETS model using `ets()` in R, and if the chosen model has a seasonal component, then the data is seasonal. For higher frequency data, or where the seasonal period is non-integer, a TBATS model will do much the same thing via the `tbats()` function.\n\nThis is not a formal test of seasonality, as the model selection is based on the AIC rather than any hypothesis test. However, there is a related log-likelihood test based on the difference between the selected model, and the equivalent model with an additional seasonal term added. Twice the difference between the two log-likelihoods will have a chi-squared distribution according to Wilks' theorem. The degrees of freedom will be the difference in the number of parameters being estimated in the two models.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_77e9bbedf323397363b2604fcd14092d'}\n\n```{.r .cell-code}\nlibrary(fpp2)\nautoplot(pigs)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nets(pigs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nETS(A,N,A) \n\nCall:\n ets(y = pigs) \n\n  Smoothing parameters:\n    alpha = 0.3095 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 92791.1661 \n    s = 6826.521 -181.8789 991.7917 -1546.851 2155.181 5843.908\n           1723.405 3923.781 -2662.907 1882.368 -7339.192 -11616.13\n\n  sigma:  9271.526\n\n     AIC     AICc      BIC \n4434.551 4437.342 4483.097 \n```\n:::\n:::\n\n\nFor example, the `pigs` data (Monthly number of pigs slaughted in Victoria) does not look very seasonal when plotted (see above), but the `ets` function selects an ETS(A,N,A) model. That is, it detects an additive seasonal component. We can formally test the significance of the seasonal component as follows.\n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_2cc37beb32bc8ca2e3af43ab541a14d8'}\n\n```{.r .cell-code}\nfit1 <- ets(pigs)\nfit2 <- ets(pigs, model=\"ANN\")\n\ndeviance <- 2*c(logLik(fit1) - logLik(fit2))\ndf <- attributes(logLik(fit1))$df - attributes(logLik(fit2))$df\n#P value\n1-pchisq(deviance,df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.255499e-07\n```\n:::\n:::\n\n\nThe resulting p-value is $5.2\\times 10^{-7}$, so the additional seasonal component is significant.\n\nPersonally, I never bother with the hypothesis test as I think it answers the wrong question. If the hypothesis test is significant, we can conclude that the data are very unlikely to have been generated from the simpler (non-seasonal) model. But I don't actually believe the data were generated by any ETS model, so all this is telling me is that I have enough data to be able to see the difference between my data and the model.\n\nA more useful question is to ask if the seasonal component improves forecast accuracy, and that is precisely what the AIC is telling us. Minimizing the AIC is asymptotically equivalent to minimizing the one-step-head out-of-sample MSE. So a smaller AIC means better forecasts, and that's what I usually care about.\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}