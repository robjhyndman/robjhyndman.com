{
  "hash": "4019ff61b8cd6c676af6d283b6b7c71e",
  "result": {
    "markdown": "---\ndate: 2014-10-22 05:25:12+00:00\nlink: https://robjhyndman.com/hyndsight/narrow-pi/\nslug: narrow-pi\ntitle: Prediction intervals too narrow\ncategories:\n- forecasting\n- R\n- statistics\n---\n\n\nAlmost all prediction intervals from time series models are too narrow. This is a well-known phenomenon and arises because they do not account for all sources of uncertainty. In my [2002 IJF paper](/publications/hksg/), we measured the size of the problem by computing the actual coverage percentage of the prediction intervals on hold-out samples. We found that for ETS models, nominal 95% intervals may only provide coverage between 71% and 87%. The difference is due to missing sources of uncertainty.\n\nThere are at least four sources of uncertainty in forecasting using time series models:\n\n  1. The random error term;\n  2. The parameter estimates;\n  3. The choice of model for the historical data;\n  4. The continuation of the historical data generating process into the future.\n\n<!-- more -->\n\nWhen we produce prediction intervals for time series models, we generally only take into account the first of these sources of uncertainty. It would be possible to account for 2 and 3 using simulations, but that is almost never done because it would take too much time to compute. As computing speeds increase, it might become a viable approach in the future.\n\nEven if we ignore the model uncertainty and the DGP uncertainty (sources 3 and 4), and just try to allow for parameter uncertainty as well as the random error term (sources 1 and 2), there are no closed form solutions apart from some simple special cases.\n\nOne such special case is an ARIMA(0,1,0) model with drift, which can be written as\n$$\ny_t = y_{t-1} + c + e_t,\n$$\nwhere $e_t$ is a white noise process. In this case, it is easy to compute the uncertainty associated with the estimate of $c$, and then allow for it in the forecasts.\n\nThis model can be fitted using either the `Arima` function or the `rwf` function from the forecast package for R. If the `Arima` function is used, the uncertainty in $c$ is ignored, but if the `rwf` function is used, the uncertainty in $c$ is included in the prediction intervals. The difference can be seen in the following simulated example.\n\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_56a082774f3e977e34cfb3f986e00166'}\n\n```{.r .cell-code}\nlibrary(forecast)\n\nset.seed(22)\nx <-ts(cumsum(rnorm(50, -2.5, 4)))\n\nRWD.x <- rwf(x,  h=40, drift=TRUE, level=95)\nARIMA.x <- Arima(x, c(0,1,0), include.drift=TRUE)\n\nplot(forecast(ARIMA.x, h=40, level=95))\nlines(RWD.x$lower, lty=2)\nlines(RWD.x$upper, lty=2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}