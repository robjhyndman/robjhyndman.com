{
  "hash": "f11cb044bfe40b1988cb818888a7fdc6",
  "result": {
    "markdown": "---\ndate: 2014-11-21 06:40:51+00:00\nslug: visualization-of-probabilistic-forecasts\ntitle: Visualization of probabilistic forecasts\ncategories:\n- forecasting\n- graphics\n- R\n- statistics\n---\n\n\nThis week my research group discussed Adrian Raftery's recent paper on [\"Use and Communication of Probabilistic Forecasts\"](http://arxiv.org/abs/1408.4812) which provides a fascinating but brief survey of some of his work on modelling and communicating uncertain futures. Coincidentally, today I was also sent a copy of David Spiegelhalter's paper on [\"Visualizing Uncertainty About the Future\"](http://www.sciencemag.org/content/333/6048/1393.abstract). Both are well-worth reading.\n\nIt made me think about my own efforts to communicate future uncertainty through graphics. Of course, for time series forecasts I normally show prediction intervals. I prefer to use more than one interval at a time because it helps convey a little more information. The default in the forecast package for R is to show both an 80% and a 95% interval like this:<!-- more -->\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_2cbc47d82cc7aa32237d7be391884d78'}\n\n```{.r .cell-code}\nlibrary(forecast)\nfit <- ets(fma::hsales)\nplot(forecast(fit), include=120)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nIt is sometimes preferable to use a 50% and a 95% interval, rather like a boxplot:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_7e8eba1bb30ac9e56ae0c77e89723bba'}\n\n```{.r .cell-code}\nplot(forecast(fit, level=c(50,95)), include=120)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nIn some circles (especially macroeconomic forecasting), fan charts are popular:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_abd7ef49ef6e4c77615dace1c39b8a59'}\n\n```{.r .cell-code}\nplot(forecast(fit,fan=TRUE),include=120)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nPersonally, I don't like these at all as they lose any specific probabilistic interpretability. What does the darker shaded region actually refer to? At least in the previous version, it is clear that the dark region contains 50% of the probability.\n\n\nFor multi-modal distributions I like to use highest density regions. Here is an example applied to Nicholson's blowfly data using a threshold model:\n\n[![Screenshot from 2014-11-21 15:42:37](/files/Screenshot-from-2014-11-21-154237.png)](/files/Screenshot-from-2014-11-21-154237.png)\n\nThe dark region has 50% coverage and the light region has 95% coverage. The forecast distributions become bimodal after the first ten iterations, and so the 50% region is split in two to show that. This graphic was taken from a [_J. Forecasting_ paper](/publications/highest-density-forecast-regions-for-non-linear-and-non-normal-time-series-models/) I wrote in 1996, so these ideas have been around for a while!\n\nIt is easy enough to produce forecast HDR with time series. Here is some R code to do it:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_00e2114fb09c28cd60a30d060d9171d4'}\n\n```{.r .cell-code}\n#HDR for time series object\n# Assumes that forecasts can be computed and futures simulated from object\nforecasthdr <- function(object, h = ifelse(object$m > 1, 2 * object$m, 10),\n                        nsim=2000, plot=TRUE, level=c(50,95), xlim=NULL, ylim=NULL, ...)\n{\n  require(hdrcde)\n  set.seed(2014)\n  # Compute forecasts\n  fc <- forecast(object)\n  ft <- time(fc$mean)\n\n  # Simulate future sample paths\n  sim <- matrix(0,nrow=h,ncol=nsim)\n  for(i in 1:nsim)\n    sim[,i] <- simulate(object, nsim=h)\n\n  # Compute HDRs\n  nl <- length(level)\n  hd <- array(0, c(h,nl,10))\n  mode <- numeric(h)\n  for(k in 1:h)\n  {\n    hdtmp <- hdr(sim[k,], prob=level)\n    hd[k,,1:ncol(hdtmp$hdr)] <- hdtmp$hdr\n    mode[k] <- hdtmp$mode\n  }\n  # Remove unnecessary sections of HDRs\n  nz <- apply(abs(hd),3,sum) > 0\n  hd <- hd[,,nz]\n  dimnames(hd)[[1]] <- 1:h\n  dimnames(hd)[[2]] <- level\n\n\n  # Produce plot if required\n  if(plot)\n  {\n    if(is.null(xlim))\n      xlim <- range(time(object$x),ft)\n    if(is.null(ylim))\n      ylim <- range(object$x, hd)\n    plot(object$x,xlim=xlim, ylim=ylim, ...)\n    # Show HDRs\n    cols <- rev(colorspace::sequential_hcl(52))[level - 49]\n    for(k in 1:h)\n    {\n      for(j in 1:nl)\n      {\n        hdtmp <- hd[k,j,]\n        nint <- length(hdtmp)/2\n        for(l in 1:nint)\n        {\n          polygon(ft[k]+c(-1,-1,1,1)/object$m/2,\n                  c(hdtmp[2*l-1],hdtmp[2*l],hdtmp[2*l],hdtmp[2*l-1]),\n                col=cols[j], border=FALSE)\n        }\n      }\n      points(ft[k], mode[k], pch=19, col=\"blue\",cex=0.8)\n    }\n    #lines(fc$mean,col='blue',lwd=2)\n  }\n\n  # Return HDRs\n  return(list(hdr=hd,mode=mode,level=level))\n}\n```\n:::\n\n\nWe can apply it using the example I started with:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_861f49cde92b570f4e4b1582229585d7'}\n\n```{.r .cell-code}\nz <- forecasthdr(fit,xlim=c(1986,1998),nsim=5000,\n                  xlab=\"Year\",ylab=\"US monthly housing sales\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nThe dots are modes of the forecast distributions, and the 50% and 95% highest density regions are also shown. In this case, the distributions are unimodal, and so all the regions are intervals.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}