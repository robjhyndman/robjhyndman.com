{
  "hash": "8f894c5dede7a2f2016751b2b594a9a7",
  "result": {
    "markdown": "---\ndate: 2014-09-08 05:36:56+00:00\nlink: https://robjhyndman.com/hyndsight/quantile-forecasts-in-r/\nslug: quantile-forecasts-in-r\ntitle: Generating quantile forecasts in R\ncategories:\n- computing\n- energy\n- forecasting\n- R\n- statistics\n---\n\n\nFrom today's email:\n\n\n\n>I have just finished reading a copy of ['Forecasting:Principles and Practice'](http://www.otexts.org/fpp) and I have found the book really interesting. I have particularly enjoyed the case studies and focus on practical applications.\n>\n>After finishing the book I have joined a forecasting competition to put what I've learnt to the test. I do have a couple of queries about the forecasting outputs required. The output required is a quantile forecast, is this the same as prediction intervals? Is there any R function to produce quantiles from 0 to 99?\n>\n>If you were able to point me in the right direction regarding the above it would be greatly appreciated.\n>\n>Many Thanks,\n\n\n\n<!-- more -->\n\nPresumably the competition is [GEFCOM2014](http://www.gefcom.org) which I've [posted about before](https://robjhyndman.com/hyndsight/gefcom-2014/).\n\nThe future value of a time series is unknown, so you can think of it as a random variable, and its distribution is the \"forecast distribution\". A \"quantile forecast\" is a quantile of the forecast distribution. The usual point forecast is often the mean or the median of the forecast distribution. A prediction interval is a range of specified coverage probability under that distribution. For example, if we assume the forecast distribution is normal, then the 95% prediction interval is defined by the 2.5% and 97.5% quantiles of the forecast distribution.\n\nStill assuming normality, we could generate the forecast quantiles from 1% to 99% in R using\n\n\n```r\n    qnorm((1:99)/100, m, s)\n```\n\nwhere `mu` and `sigma` are the estimated mean and standard deviation of the forecast distribution. So if you are using the forecast package in R, you can do something like this:\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_3ce43d84a906aa375ec480d1a568af94'}\n\n```{.r .cell-code}\n    library(forecast)\n    fit <- auto.arima(WWWusage)\n    fc <- forecast(fit, h=20, level=95)\n    qf <- matrix(0, nrow=99, ncol=20)\n    m <- fc$mean\n    s <- (fc$upper-fc$lower)/1.96/2\n    for(h in 1:20)\n      qf[,h] <- qnorm((1:99)/100, m[h], s[h])\n\n    plot(fc)\n    matlines(101:120, t(qf), col=rainbow(120), lty=1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nOf course, assuming a normal distribution is rather restrictive and not very interesting. For a more interesting but much more complicated approach to generating quantiles, see my 2010 paper on [Density forecasting for long-term peak electricity demand](/publications/peak-electricity-demand/).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}