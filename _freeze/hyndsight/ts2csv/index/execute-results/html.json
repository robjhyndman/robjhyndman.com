{
  "hash": "88648d6355e04c0f58af89af69d5a39e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ndate: 2018-08-03\nslug: ts2csv\ntitle: \"Saving ts objects as csv files\"\ncategories:\n  - time series\n  - R\n---\n\n\n\nOccasionally R might not be the tool you want to use (hard to believe, but apparently that happens). Then you may need to export some data from R via a csv file. When the data is stored as a `ts` object, the time index can easily get lost. So I wrote a little function to make this easier, using the `tsibble` package to do almost all of the work in looking after the time index. (Thanks to Earo in the comments for greatly simplifying my original code.)\n\n```r\n# Convert time series data to csv\nts2csv <- function(x) {\n  fname <- paste0(deparse(substitute(x)), \".csv\")\n  if(inherits(x, \"mts\")) {\n   readr::write_csv(tsibble::as_tsibble(x, pivot_longer = FALSE), fname)\n  } else {\n   readr::write_csv(tsibble::as_tsibble(x), fname)\n  }\n}\n\nlibrary(fpp2)\nts2csv(auscafe)    # Univariate monthly data\nts2csv(visnights)  # Multivariate quarterly data\nts2csv(elecdemand) # Multivariate half-hourly data\n```\n\n(Updated: 13 April 2025)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}